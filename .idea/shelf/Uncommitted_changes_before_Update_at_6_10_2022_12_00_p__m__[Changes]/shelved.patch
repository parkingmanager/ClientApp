Index: Models/Utils.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import cv2\r\nimport numpy as np\r\nimport copy\r\n\r\n# Negocio\r\nfrom Bussiness.Models.DefinedSpace import DefinedSpace as DefinedSpace\r\n\r\n\r\nclass Utils:\r\n\r\n    # Contenido de la imagen original\r\n    content = []\r\n    path = \"\"\r\n\r\n    # Color detallado\r\n    color = {'r': 255, 'g': 255, 'b': 255}\r\n\r\n    def __init__(self, path):\r\n        Utils.content = cv2.imread(path)\r\n        Utils.Path = path\r\n\r\n    @staticmethod\r\n    def get_original_image_content():\r\n        \"\"\"\r\n        Obtiene una copia de la imagen original.\r\n        :return:\r\n        \"\"\"\r\n        return copy.deepcopy(Utils.content)\r\n\r\n    @staticmethod\r\n    def set_original_image_content(content):\r\n        \"\"\"\r\n        Obtiene una copia de la imagen original.\r\n        :return:\r\n        \"\"\"\r\n        Utils.content = copy.deepcopy(content)\r\n\r\n    @staticmethod\r\n    def get_line_color():\r\n        \"\"\"\r\n        Retorna el color seleccionado\r\n        :return:\r\n        \"\"\"\r\n        return Utils.color\r\n\r\n    @staticmethod\r\n    def set_line_color(r, g, b):\r\n        \"\"\"\r\n        Aplica el color seleccionado\r\n        :param r:\r\n        :param g:\r\n        :param b:\r\n        :return:\r\n        \"\"\"\r\n        Utils.color[\"r\"] = r\r\n        Utils.color[\"g\"] = g\r\n        Utils.color[\"b\"] = b\r\n\r\n    @staticmethod\r\n    def get_pixel_values(picture, x, y):\r\n        \"\"\"\r\n            Extrae valores RGB y HSV de una imagen especificada para una coordenada\r\n        \"\"\"\r\n        # Extrae canales de forma independiente\r\n        b_ex, g_ex, r_ex = picture[:, :, 0], picture[:, :, 1], picture[:, :, 2]\r\n\r\n        r_val = r_ex[y][x]\r\n        g_val = g_ex[y][x]\r\n        b_val = b_ex[y][x]\r\n\r\n        # Conforma imagen rgb de 1px * 1px\r\n        rgb = np.array([[[r_val, g_val, b_val]]])\r\n        # Convierte el espacio de color H: 0 -> 179, S: 0 -> 255, V: -> 0 -> 255\r\n        hsv = cv2.cvtColor(rgb, cv2.COLOR_RGB2HSV)\r\n        # Extrae valores pixel a pixel\r\n        h_val = hsv[0][0][0]\r\n        s_val = hsv[0][0][1]\r\n        v_val = hsv[0][0][2]\r\n\r\n        return r_val, g_val, b_val, h_val, s_val, v_val\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Models/Utils.py b/Models/Utils.py
--- a/Models/Utils.py	(revision 99d27571c3a5e028e880354c443f36b288d64f59)
+++ b/Models/Utils.py	(date 1661116674558)
@@ -20,7 +20,7 @@
         Utils.Path = path
 
     @staticmethod
-    def get_original_image_content():
+    def get_original_image_content() -> object:
         """
         Obtiene una copia de la imagen original.
         :return:
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 99d27571c3a5e028e880354c443f36b288d64f59)
+++ /dev/null	(revision 99d27571c3a5e028e880354c443f36b288d64f59)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: ../ParkingAppManager/Login/Main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import MainMenu.Main\r\nfrom Login.Login import Ui_Form\r\nfrom PyQt5 import QtCore, QtGui, QtWidgets\r\nimport sys\r\n\r\n\r\nclass LoginWindow(QtWidgets.QMainWindow):\r\n\r\n    def __init__(self):\r\n        \"\"\"\r\n            Constructor donde se inicializan parámetros de interfaz gráfica\r\n        \"\"\"\r\n\r\n        super(LoginWindow, self).__init__()\r\n        self.ui = Ui_Form()\r\n        self.ui.setupUi(self)\r\n\r\n        self.ui.login_login_btn.clicked.connect(lambda callback: self.log_in())\r\n\r\n        # Conexiones\r\n        # self.ui.btn_load_image.clicked.connect(self.open_image)\r\n        # self.ui.btn_delimite.clicked.connect(lambda callback: self.create_filter(FilterTypes.Delimite))\r\n        # self.ui.btn_transformation.clicked.connect(lambda callback: self.create_filter(FilterTypes.Transformation))\r\n        # self.ui.btn_color.clicked.connect(lambda callback: self.create_filter(FilterTypes.Color))\r\n        # self.ui.btn_perspective.clicked.connect(lambda callback: self.create_filter(FilterTypes.PerspectiveTransformation))\r\n\r\n        # self.ui.btn_color_space.clicked.connect(lambda callback: self.create_filter(FilterTypes.ColorSpace))\r\n        # self.ui.btn_delimite_area.clicked.connect(lambda callback: self.create_filter(FilterTypes.DelimiteArea))\r\n    def log_in(self):\r\n        user = self.ui.login_user_tbx.text()\r\n        password = self.ui.login_password_tbx.text()\r\n\r\n        menu = MainMenu.Main.MainWindow()\r\n\r\n        menu.show()\r\n\r\n        # Cierra ventana\r\n        #self.hide()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../ParkingAppManager/Login/Main.py b/../ParkingAppManager/Login/Main.py
--- a/../ParkingAppManager/Login/Main.py	(revision 99d27571c3a5e028e880354c443f36b288d64f59)
+++ b/../ParkingAppManager/Login/Main.py	(date 1650851490190)
@@ -1,7 +1,6 @@
-import MainMenu.Main
+import ParkingAppManager.MainMenu.Main
 from Login.Login import Ui_Form
-from PyQt5 import QtCore, QtGui, QtWidgets
-import sys
+from PyQt5 import QtWidgets
 
 
 class LoginWindow(QtWidgets.QMainWindow):
@@ -30,7 +29,7 @@
         user = self.ui.login_user_tbx.text()
         password = self.ui.login_password_tbx.text()
 
-        menu = MainMenu.Main.MainWindow()
+        menu = ParkingAppManager.MainMenu.Main.MainWindow()
 
         menu.show()
 
Index: ../.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/vcs.xml b/../.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1650850503429)
+++ b/../.idea/vcs.xml	(date 1650850503429)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/modules.xml b/../.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1650850503319)
+++ b/../.idea/modules.xml	(date 1650850503319)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/Parking_App.iml" filepath="$PROJECT_DIR$/.idea/Parking_App.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/misc.xml b/../.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1650850999347)
+++ b/../.idea/misc.xml	(date 1650850999347)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7 (Parking_App)" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: ../.idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/inspectionProfiles/profiles_settings.xml b/../.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1650850503398)
+++ b/../.idea/inspectionProfiles/profiles_settings.xml	(date 1650850503398)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from PyQt5 import QtCore, QtGui, QtWidgets, Qt\r\nfrom PyQt5.QtWidgets import QMessageBox\r\nimport sys\r\nfrom QTGraphicInterfaces.UiMainMenu import Ui_Manager\r\n\r\n\r\n# Ventanas\r\nfrom Windows.Editor import Editor\r\nfrom Windows.Visor import Visor\r\n# Comunicación\r\nfrom Integration.ParkingApi import ParkingApi\r\n\r\n\r\nclass Maqueta(QtWidgets.QMainWindow):\r\n\r\n    def __init__(self):\r\n        \"\"\"\r\n            Constructor donde se inicializan parámetros de interfaz gráfica\r\n        \"\"\"\r\n        super(Maqueta, self).__init__()\r\n        self.ui = Ui_Manager()\r\n        self.ui.setupUi(self)\r\n\r\n        self.api = ParkingApi()\r\n\r\n        # Consulta la información necesaria\r\n        lotes = self.api.get_parkings()\r\n\r\n        # Mapea lo lotes en la interfaz\r\n        for lot in lotes:\r\n            self.draw_widget(lot)\r\n\r\n        # Conexiones\r\n        self.ui.btn_create.clicked.connect(self.open_editor)\r\n\r\n    def draw_widget(self,  lote: dict):\r\n\r\n        id = lote[\"IdLote\"]\r\n        lot_frame = QtWidgets.QFrame(self.ui.scroll_area_widget_contents)\r\n        lot_frame.setMinimumSize(QtCore.QSize(100, 40))\r\n        lot_frame.setStyleSheet(\"QFrame{\\n\"\r\n                                     \"    border:1px solid #4a26fd;\\n\"\r\n                                     \"    border-radius: 10px;\\n\"\r\n                                      \"}\\n\"\r\n                                     \"\\n\"\r\n                                     \"QPushButton{\\n\"\r\n                                     \"    background-color: #ffffff;\\n\"\r\n                                     \"    border-radius:5px;\\n\"\r\n                                     \"    border: 1px solid  #ffffff\\n\"\r\n                                     \"\\n\"\r\n                                     \"}\\n\"\r\n                                     \"\\n\"\r\n                                     \"QPushButton:Hover{    \\n\"\r\n                                     \"    border: 1px solid  #4a26fd;\\n\"\r\n                                     \"}\")\r\n        lot_frame.setFrameShape(QtWidgets.QFrame.NoFrame)\r\n        lot_frame.setFrameShadow(QtWidgets.QFrame.Raised)\r\n        lot_frame.setObjectName(f\"lot_frame_{id}\")\r\n\r\n        ly_lot = QtWidgets.QHBoxLayout(lot_frame)\r\n        ly_lot.setObjectName(f\"ly_lot_{id}\")\r\n\r\n        lbl_lot_id = QtWidgets.QLabel(lot_frame)\r\n        font = QtGui.QFont()\r\n        font.setFamily(\"FontAwesome\")\r\n        font.setPointSize(13)\r\n        lbl_lot_id.setFont(font)\r\n        lbl_lot_id.setStyleSheet(\"border:none\")\r\n        lbl_lot_id.setObjectName(f\"lbl_lot_id_{id}\")\r\n        ly_lot.addWidget(lbl_lot_id)\r\n        lbl_lot_id_spacer_item = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)\r\n        ly_lot.addItem(lbl_lot_id_spacer_item)\r\n\r\n        lbl_lot_name = QtWidgets.QLabel(lot_frame)\r\n        font = QtGui.QFont()\r\n        font.setFamily(\"FontAwesome\")\r\n        font.setPointSize(13)\r\n        lbl_lot_name.setFont(font)\r\n        lbl_lot_name.setStyleSheet(\"border:none\")\r\n        lbl_lot_name.setObjectName(f\"lbl_lot_name_{id}\")\r\n        ly_lot.addWidget(lbl_lot_name)\r\n        lbl_lot_name_spacer_item = QtWidgets.QSpacerItem(227, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\r\n        ly_lot.addItem(lbl_lot_name_spacer_item)\r\n\r\n        btn_lot_view = QtWidgets.QPushButton(lot_frame)\r\n        btn_lot_view.setText(\"\")\r\n        btn_lot_view_icon = QtGui.QIcon()\r\n        btn_lot_view_icon.addPixmap(QtGui.QPixmap(\"QTGraphicInterfaces/Icons/eye-solid.svg\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\r\n        btn_lot_view.setIcon(btn_lot_view_icon)\r\n        btn_lot_view.setObjectName(f\"btn_lot_view_{id}\")\r\n        ly_lot.addWidget(btn_lot_view)\r\n\r\n        btn_lot_edit = QtWidgets.QPushButton(lot_frame)\r\n        btn_lot_edit.setText(\"\")\r\n        btn_lot_edit_icon = QtGui.QIcon()\r\n        btn_lot_edit_icon.addPixmap(QtGui.QPixmap(\"QTGraphicInterfaces/Icons/pen-to-square-solid.svg\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\r\n        btn_lot_edit.setIcon(btn_lot_edit_icon)\r\n        btn_lot_edit.setObjectName(f\"btn_lot_edit_{id}\")\r\n        ly_lot.addWidget(btn_lot_edit)\r\n\r\n        btn_lot_stats = QtWidgets.QPushButton(lot_frame)\r\n        btn_lot_stats.setText(\"\")\r\n        btn_lot_stats_icon = QtGui.QIcon()\r\n        btn_lot_stats_icon.addPixmap(QtGui.QPixmap(\"QTGraphicInterfaces/Icons/chart-line-solid.svg\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\r\n        btn_lot_stats.setIcon(btn_lot_stats_icon)\r\n        btn_lot_stats.setObjectName(f\"btn_lot_stats_{id}\")\r\n        ly_lot.addWidget(btn_lot_stats)\r\n\r\n        btn_lot_delete = QtWidgets.QPushButton(lot_frame)\r\n        btn_lot_delete.setText(\"\")\r\n        btn_lot_delete_icon = QtGui.QIcon()\r\n        btn_lot_delete_icon.addPixmap(QtGui.QPixmap(\"QTGraphicInterfaces/Icons/trash-solid.svg\"), QtGui.QIcon.Normal, QtGui.QIcon.Off)\r\n        btn_lot_delete.setIcon(btn_lot_delete_icon)\r\n        btn_lot_delete.setObjectName(\"btn_lot_delete\")\r\n        ly_lot.addWidget(btn_lot_delete)\r\n\r\n        setattr(self.ui, f'lot_frame{id}', lot_frame)\r\n\r\n        # Parametrización del lote\r\n        lbl_lot_id.setText(str(lote[\"IdLote\"]))\r\n        lbl_lot_name.setText(lote[\"Nombre\"])\r\n\r\n        self.ui.ly_lots.setWidget(id, QtWidgets.QFormLayout.SpanningRole, lot_frame)\r\n\r\n        # Eventos dinámicos de los botones\r\n        btn_lot_view.clicked.connect(lambda callback: self.view_lot(id))\r\n        btn_lot_delete.clicked.connect(lambda callback: self.delete_lot(id))\r\n\r\n    def view_lot(self, parking_id):\r\n\r\n        # Lectura del Id\r\n        data = self.api.get_parking(parking_id)\r\n\r\n        # Instancia del visor\r\n        app_visor = Visor(data)\r\n\r\n    def delete_lot(self, parking_id):\r\n\r\n        ret = QMessageBox.question(self, 'Eliminar lote', \"¿Está seguro de eliminar el lote?\", QMessageBox.Yes | QMessageBox.No )\r\n\r\n        if ret == QMessageBox.Yes:\r\n            # Actualizar la lista\r\n            if self.api.delete_parking(parking_id):\r\n                lot_frame = getattr(self.ui, f'lot_frame{parking_id}')\r\n                lot_frame.deleteLater()\r\n        else:\r\n            return\r\n\r\n    def add_lot(self, lot: object):\r\n        self.draw_widget(lot)\r\n\r\n    def open_editor(self):\r\n        app_editor = Editor(self)\r\n        app_editor.show()\r\n\r\n\r\napp = QtWidgets.QApplication([])\r\napplication = Maqueta()\r\napplication.show()\r\nsys.exit(app.exec())
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 99d27571c3a5e028e880354c443f36b288d64f59)
+++ b/main.py	(date 1655604400826)
@@ -1,6 +1,7 @@
+import sys
 from PyQt5 import QtCore, QtGui, QtWidgets, Qt
 from PyQt5.QtWidgets import QMessageBox
-import sys
+
 from QTGraphicInterfaces.UiMainMenu import Ui_Manager
 
 
Index: ../.idea/Parking_App.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/Parking_App.iml b/../.idea/Parking_App.iml
new file mode 100644
--- /dev/null	(date 1650850999315)
+++ b/../.idea/Parking_App.iml	(date 1650850999315)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="jdk" jdkName="Python 3.7 (Parking_App)" jdkType="Python SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="PyDocumentationSettings">
+    <option name="format" value="PLAIN" />
+    <option name="myDocStringFormat" value="Plain" />
+  </component>
+</module>
\ No newline at end of file
Index: ../.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/.gitignore b/../.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1650850503788)
+++ b/../.idea/.gitignore	(date 1650850503788)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/ParkingManager.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.8 (proyectogrado)\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/ParkingManager.iml b/.idea/ParkingManager.iml
--- a/.idea/ParkingManager.iml	(revision 99d27571c3a5e028e880354c443f36b288d64f59)
+++ b/.idea/ParkingManager.iml	(date 1655953364100)
@@ -2,7 +2,7 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 3.8 (proyectogrado)" jdkType="Python SDK" />
+    <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: PruebaSys.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PruebaSys.py b/PruebaSys.py
new file mode 100644
--- /dev/null	(date 1655607147274)
+++ b/PruebaSys.py	(date 1655607147274)
@@ -0,0 +1,7 @@
+import sys
+from PyQt5 import QtCore, QtGui, QtWidgets, Qt
+from PyQt5.QtWidgets import QMessageBox
+
+from QTGraphicInterfaces.UiMainMenu import Ui_Manager
+from Windows.Editor import Editor
+#from Windows.Visor import Visor
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.8 (proyectogrado)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 99d27571c3a5e028e880354c443f36b288d64f59)
+++ b/.idea/misc.xml	(date 1655953364149)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (proyectogrado)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (proyectogrado_env)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: ../ParkingAppManager/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from Login.Main import LoginWindow as login\r\nfrom MainMenu.Main import MainWindow as menu\r\n\r\nimport sys\r\nfrom PyQt5.QtWidgets import QApplication\r\n\r\nif __name__ == \"__main__\":\r\n    app = QApplication(sys.argv)\r\n    login = login()\r\n    login.show()\r\n    sys.exit(app.exec())
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../ParkingAppManager/main.py b/../ParkingAppManager/main.py
--- a/../ParkingAppManager/main.py	(revision 99d27571c3a5e028e880354c443f36b288d64f59)
+++ b/../ParkingAppManager/main.py	(date 1655604173280)
@@ -1,5 +1,5 @@
 from Login.Main import LoginWindow as login
-from MainMenu.Main import MainWindow as menu
+
 
 import sys
 from PyQt5.QtWidgets import QApplication
